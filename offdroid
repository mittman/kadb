#!/bin/bash
#################
### offdroid ####
version="0.6" ###
### OS Hazard ###
#################

move="false"
timestamp=$(date +%F)
#timestamp="2015-04-03"
device=$(adb devices -l 2>/dev/null | grep -o "device:\S*" | awk -F : '{print $2}')
internal="/storage/emulated/legacy/DCIM/Camera"
external="/storage/sdcard1/DCIM/Camera"
backupDir="$HOME/Pictures/offdroid"
destDir="${backupDir}/${device}_${timestamp}"

# Colors
RESET="\e[0;0m"
FAIL="\e[1;31m"
WARN="\e[1;33m"
BOLD="\e[1;34m"
NOTE="\e[1;35m"
HINT="\e[1;36m"

# Sanity check
[ -z "$device" ] && echo -e "${FAIL}ERROR:${RESET} device not found. Quiting" && exit 1
findcmd=$(adb shell "which find" 2>/dev/null | tr -dc '[:print:]')
[ ! -z "$findcmd" ] && hyper="true" || echo -e "${WARN}==> ${FAIL}Warning: hyper mode disabled${RESET}. ${HINT}(find not found)${RESET}"

# Parameters
[ -z "$1" -o "$1" = "-h" ] && echo "USAGE: $0 [none|--rm] [internal|external]" && echo "USAGE: $0 [none|-R] <source> <destination>" && exit 1
[ "$1" = "-v" ] && echo "$(basename $0) version $version" && exit 1
[ "$1" = "--rm" ] && move="true" && shift
[ "$1" = "-R" ] && dig="true" && shift
[ "$1" = "--rm" ] && move="true" && shift
[ "$1" = "-R" ] && dig="true" && shift
[ "$1" = "external" ] && sourceDir="$external" && destDir="$destDir/external/DCIM/Camera"
[ "$1" = "internal" ] && sourceDir="$internal" && destDir="$destDir/internal/DCIM/Camera"
[[ "$1" = /* ]] && sourceDir=$(readlink -m "$1") && sourceTest=$(adb shell "ls $sourceDir 2>/dev/null") &&
[ -z "$sourceTest" ] && echo "ERROR: source directory does not exist" && exit 1
[ ! -z "$2" ] && destDir="$2" && mkdir -p "$destDir" && destTest=$(readlink -e "$destDir" 2>/dev/null) &&
[ -z "$destTest" ] && echo "ERROR: destination directory does not exist" && exit 1
[ -d "$backupDir" ] || destDir="$PWD"
[ -z "$sourceDir" ] && sourceDir="$internal" && destDir="$destDir/internal/DCIM/Camera"
mkdir -p "$destDir"
[ ! -d "$destDir" ] && echo "ERROR: unable to create $destDir" && exit 1

# Locate files
IFS=$(echo -en "\n\b");
if [ "$hyper" = "true" -a "$dig" = "true" ]; then
  photos=$(adb shell "find ${sourceDir}/ -type f" | awk -F "${sourceDir}/" '{print $2}')
elif [ "$hyper" = "true" ]; then
  photos=$(adb shell "find ${sourceDir}/ -maxdepth 1 -type f" | awk -F "${sourceDir}/" '{print $2}')
elif [ "$dig" = "true" ]; then
  photos=$(adb shell "ls -R ${sourceDir}/") 
else
  photos=$(adb shell "ls ${sourceDir}/") 
fi
total=$(echo "$photos" | wc -l)
error="0"

action="Copying"
[ "$move" = "true" ] && action="Moving"
echo -e "${WARN}==> ${FAIL}${action}${RESET} ${HINT}(${NOTE}$total ${RESET}files${HINT})${RESET}"
echo -e "${HINT}FROM:${RESET} $sourceDir"
echo -e "${HINT}TO:${RESET} $destDir"

for image in $photos; do 
  image=$(echo "$image" | tr -dc '[:print:]')
  count=$((count+1))
  progress=$(echo "scale=2; ($count/$total)*100" | bc 2>/dev/null | awk -F "." '{print $1"%"}')
  [ "$error" != "0" ] && fails="${HINT}(${FAIL}${error}${HINT})${RESET}"
  [ ! -z "$progress" ] && echo -en "${BOLD}$progress${RESET}"

  echo -n " :: $image";
  sourceSum=$(adb shell md5sum "${sourceDir}/${image}" 2>/dev/null | awk '{print $1}');
  if [ -z "$sourceSum" ]; then
    error=$((error+1))
    echo -e "\t ${BOLD}[${NOTE}I/O${BOLD}]${RESET} ${fails}";
  else
    [ -f "${destDir}/${image}" ] && verifySum=$(md5sum "${destDir}/${image}" 2>/dev/null | awk '{print $1}');
    if [ "$sourceSum" = "$verifySum" -a "$move" = "true" ]; then
      adb shell rm "${sourceDir}/${image}"
      echo -e "\t ${BOLD}[${FAIL}REMOVED${BOLD}]${RESET} ${fails}"
    elif [ "$sourceSum" = "$verifySum" ]; then
      echo -e "\t ${BOLD}[${WARN}SKIP${BOLD}]${RESET} ${fails}"
    else
      destPath=$(dirname "$image")
      [ "$destPath" != "." ] && mkdir -p "$destDir/$destPath"
      adb pull "${sourceDir}/${image}" "$destDir/${image}" 2>/dev/null;
      destSum=$(md5sum "${destDir}/${image}" 2>/dev/null | awk '{print $1}');
      if [ "$sourceSum" = "$destSum" ]; then
        [ "$move" = "true" ] && adb shell rm "${sourceDir}/${image}"
        echo -e "\t ${BOLD}[${WARN}DONE${BOLD}]${RESET} ${fails}"
      else
        error=$((error+1))
        echo -e "\t ${BOLD}[${FAIL}ERROR${BOLD}]${RESET} ${fails}"
      fi
    fi
  fi
done;

if [ "$hyper" = "true" -a "$dig" = "true" -a "$move" = "true" ]; then
  IFS=$(echo -en "\n\b");
  photoDirs=$(adb shell "find ${sourceDir} -type d -exec rmdir {} \;")
fi

sync; sleep 1; sync;
echo "==> Found ${error} errors"

### END ###
